apply plugin: 'com.android.library'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        ndk {

            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi'
        }

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    externalNativeBuild {
        ndkBuild {
            path "src/main/jni/Android.mk"
        }
    }
}
task makeJar(type: Jar) {
    delete 'build/signe.jar' //删除之前的旧jar包
   from zipTree('build/intermediates/compile_library_classes/debug/classes.jar') //从这个目录下取出默认jar包
   into('build/') //将jar包输出到指定目录下
   //include('classes.jar')
    //archiveBaseName="build/javac/release/classes"
    from fileTree(dir: 'build/javac/release/classes',includes: ['**.java'])
    exclude( 'BuildConfig.class', 'R.class')
    destinationDir=file("build/")
    archiveName("signe.jar")
    //rename('classes.jar', 'signe.jar') //自定义jar包的名字

}
makeJar.dependsOn(build)
dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation 'androidx.appcompat:appcompat:1.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
